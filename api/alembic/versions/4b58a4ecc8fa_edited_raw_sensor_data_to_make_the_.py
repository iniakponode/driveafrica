"""edited raw_sensor_data to make the values column a json type for better serialisation

Revision ID: 4b58a4ecc8fa
Revises: 360b0d5fe847
Create Date: 2024-10-27 22:08:04.997290

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '4b58a4ecc8fa'
down_revision: Union[str, None] = '360b0d5fe847'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('raw_sensor_data', 'values',
               existing_type=mysql.VARCHAR(length=1024),
               type_=sa.JSON(),
               existing_nullable=False)
    op.alter_column('raw_sensor_data', 'sync',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
    op.create_unique_constraint(None, 'raw_sensor_data', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'raw_sensor_data', type_='unique')
    op.alter_column('raw_sensor_data', 'sync',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
    op.alter_column('raw_sensor_data', 'values',
               existing_type=sa.JSON(),
               type_=mysql.VARCHAR(length=1024),
               existing_nullable=False)
    # ### end Alembic commands ###
