"""Initial migration

Revision ID: fa06ae235ce9
Revises: e2e2d00d5e8b
Create Date: 2024-10-25 22:41:29.398543

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fa06ae235ce9'
down_revision: Union[str, None] = 'e2e2d00d5e8b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('driver_profile',
        sa.Column('driver_profile_id', sa.String(length=36), nullable=False),
        sa.Column('email', sa.String(length=50), nullable=False),
        sa.Column('sync', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('driver_profile_id')
    )
    op.create_index(op.f('ix_driver_profile_driver_profile_id'), 'driver_profile', ['driver_profile_id'], unique=True)
    op.create_index(op.f('ix_driver_profile_email'), 'driver_profile', ['email'], unique=True)

    op.create_table('driving_tips',
        sa.Column('tip_id', sa.String(length=36), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('meaning', sa.String(length=255), nullable=True),
        sa.Column('penalty', sa.String(length=255), nullable=True),
        sa.Column('fine', sa.String(length=255), nullable=True),
        sa.Column('law', sa.String(length=255), nullable=True),
        sa.Column('hostility', sa.String(length=255), nullable=True),
        sa.Column('summary_tip', sa.String(length=255), nullable=True),
        sa.Column('sync', sa.Boolean(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column('profile_id', sa.String(length=36), nullable=False),
        sa.Column('llm', sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint('tip_id')
    )
    op.create_index(op.f('ix_driving_tips_profile_id'), 'driving_tips', ['profile_id'], unique=False)
    op.create_index(op.f('ix_driving_tips_tip_id'), 'driving_tips', ['tip_id'], unique=True)

    op.create_table('embeddings',
        sa.Column('chunk_id', sa.BINARY(length=16), nullable=False, comment='Unique identifier for each chunk of text.'),
        sa.Column('chunk_text', sa.String(length=5000), nullable=False, comment='The text content of the chunk.'),
        sa.Column('embedding', sa.LargeBinary(), nullable=False, comment='Serialized embedding vector for the chunk.'),
        sa.Column('source_type', sa.String(length=255), nullable=False, comment='The type of source (e.g., nat_dr_reg_law, ng_high_way_code).'),
        sa.Column('source_page', sa.Integer(), nullable=True, comment='The page number for traceability.'),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=False, comment='The timestamp indicating when the embedding was created.'),
        sa.PrimaryKeyConstraint('chunk_id')
    )

    op.create_table('location',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('latitude', sa.Float(), nullable=False),
        sa.Column('longitude', sa.Float(), nullable=False),
        sa.Column('timestamp', sa.DateTime(), nullable=False),
        sa.Column('date', sa.DateTime(), nullable=False),
        sa.Column('altitude', sa.Float(), nullable=False),
        sa.Column('speed', sa.Float(), nullable=False),
        sa.Column('distance', sa.Float(), nullable=False),
        sa.Column('sync', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_id'), 'location', ['id'], unique=True)

    op.create_table('nlg_report',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.String(length=255), nullable=False),
        sa.Column('report_text', sa.String(length=2000), nullable=False),
        sa.Column('date_range', sa.String(length=255), nullable=False),
        sa.Column('synced', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table('trip_data',
        sa.Column('id', sa.BINARY(length=16), nullable=False),
        sa.Column('driver_profile_id', sa.String(length=36), nullable=False),
        sa.Column('start_date', sa.DateTime(), nullable=True),
        sa.Column('end_date', sa.DateTime(), nullable=True),
        sa.Column('start_time', sa.Integer(), nullable=False),
        sa.Column('end_time', sa.Integer(), nullable=True),
        sa.Column('synced', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['driver_profile_id'], ['driver_profile.driver_profile_id']),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id')
    )

    op.create_table('raw_sensor_data',
        sa.Column('id', sa.BINARY(length=16), nullable=False),
        sa.Column('sensor_type', sa.Integer(), nullable=False),
        sa.Column('sensor_type_name', sa.String(length=255), nullable=False),
        sa.Column('values', sa.String(length=255), nullable=False),
        sa.Column('timestamp', sa.Integer(), nullable=False),
        sa.Column('date', sa.DateTime(), nullable=True),
        sa.Column('accuracy', sa.Integer(), nullable=False),
        sa.Column('location_id', sa.String(length=36), nullable=True),
        sa.Column('trip_id', sa.BINARY(length=16), nullable=True),
        sa.Column('sync', sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(['location_id'], ['location.id']),
        sa.ForeignKeyConstraint(['trip_id'], ['trip_data.id']),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id')
    )

    op.create_table('unsafe_behaviour',
        sa.Column('id', sa.BINARY(length=16), nullable=False),
        sa.Column('tripId', sa.BINARY(length=16), nullable=False),
        sa.Column('location_id', sa.String(length=36), nullable=True),
        sa.Column('behavior_type', sa.String(length=255), nullable=False),
        sa.Column('severity', sa.Float(), nullable=False),
        sa.Column('timestamp', sa.String(length=255), nullable=False),
        sa.Column('date', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('updated', sa.Boolean(), nullable=True),
        sa.Column('synced', sa.Boolean(), nullable=True),
        sa.Column('alcohol_influence', sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(['location_id'], ['location.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['tripId'], ['trip_data.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table('causes',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('unsafe_behaviour_id', sa.BINARY(length=16), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('influence', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['unsafe_behaviour_id'], ['unsafe_behaviour.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_causes_id'), 'causes', ['id'], unique=True)
    op.create_index(op.f('ix_causes_unsafe_behaviour_id'), 'causes', ['unsafe_behaviour_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_causes_unsafe_behaviour_id'), table_name='causes')
    op.drop_index(op.f('ix_causes_id'), table_name='causes')
    op.drop_table('causes')
    op.drop_table('unsafe_behaviour')
    op.drop_table('raw_sensor_data')
    op.drop_table('trip_data')
    op.drop_table('nlg_report')
    op.drop_index(op.f('ix_location_id'), table_name='location')
    op.drop_table('location')
    op.drop_table('embeddings')
    op.drop_index(op.f('ix_driving_tips_tip_id'), table_name='driving_tips')
    op.drop_index(op.f('ix_driving_tips_profile_id'), table_name='driving_tips')
    op.drop_table('driving_tips')
    op.drop_index(op.f('ix_driver_profile_email'), table_name='driver_profile')
    op.drop_index(op.f('ix_driver_profile_driver_profile_id'), table_name='driver_profile')
    op.drop_table('driver_profile')
    # ### end Alembic commands ###
